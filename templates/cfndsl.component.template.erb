<% for @require in component_requires %>
    require('<%= @require %>')
<% end %>
CloudFormation do

<% for @mapping in dsl.mappings %>
    Mapping('<%= @mapping %>', mappings['<%= @mapping %>'])
<% end %>

# render subcomponents
<% for @subcomponent in dsl.subcomponents %>
    CloudFormation_Stack('<%= @subcomponent.cfn_name %>') do
        TemplateURL '<%= @subcomponent.distribution_url %>'
        Parameters ({
        <% for @param in @subcomponent.parameters %><%="\t"%>'<%=@param.name %>' => <%= @param.cfndsl_value %>,
        <% end %>})
        <% if @subcomponent.conditional %>Condition 'Enable<%= @subcomponent.cfn_name %>' <% end %>
    end
<% end %>

<%= component_cfndsl %>


<% unless dsl.lambda_functions_keys.nil? %>
    # cfhighlander generated lambda functions
    <% for @key in dsl.lambda_functions_keys %>
        render_lambda_functions(self,
        <%= @key %>,
        lambda_metadata,
        {'bucket'=>'<%= dsl.distribution_bucket %>','prefix' => '<%= dsl.distribution_prefix %>', 'version'=>'<%= dsl.version %>'})
    <% end %>
<% end %>
    # cfhighlander generated parameters
<% for @param in dsl.parameters.param_list %>
    Parameter('<%= @param.name %>') do
      Type '<%= @param.type %>'
      Default '<%= @param.default_value %>'
      <% unless @param.no_echo.nil? %>NoEcho <%= @param.no_echo.to_s %> <% end %>
      <% unless @param.allowed_values.nil? %>AllowedValues <%= @param.allowed_values.to_s %> <% end %>
    end
<% end %>

<% for @condition in dsl.conditions %>    Condition('<%= @condition.name %>', <%= @condition.expression %>)
<% end %>
<% for @output in dsl .outputs %>    Output('<%= @output.name %>', <%= @output.value.inspect %>)
<% end %>
    Description '<%= dsl.description %>'
end
